basePath: /
consumes:
  - application/json
definitions:
  User:
    properties:
      email:
        description: user email
        type: string
      password:
        type: string
    required:
      - email
      - password
    type: object
  Role:
    properties:
      id:
        description: user id, to which you want to atach the role
        type: string
      role:
        description: one of the existing roles in string format
        type: string
    required:
      - id
      - role
  Game:
    properties:
      name:
        description: game name. must be unique to the db1
        type: string
      price:
        description: game price in dollars
        type: string
      id:
        description: seller id
        type: string
    required:
      - name
      - price
      - id
  Key:
    properties:
      id:
        description: game id, which code belongs to
        type: string
      code:
        description: code itself
        type: string
    required:
      - id
      - code
  PaymentSession:
    properties:
      id:
        description: game id, which customer wants to buy
        type: string
      email:
        description: customer email
        type: string
    required:
      - id
      - email
  PaymentProcedure:
    properties:
      card:
        description: card number
        type: string
    required:
      - card
info:
  description: Documentation for News API
  title: of News API
  version: 1.0.0
paths:
  /user/sign-up:
    post:
      description: user stores his info into db

      responses:
        "201":
          $ref: '#/responses/whoami'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
  /user/sign-in:
    post:
      description: user tries to login and recieves jwt token
      responses:
        "200":
          $ref: '#/responses/error'
        "401":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
        "500":
          $ref: '#/responses/error'
  /user/role/grant-role:
    post:
      description: grant role to authorised user
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "201":
          $ref: '#/responses/getRole'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
  /user/role/revoke-role:
    post:
      description: remove role from user
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/getRole'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
  /store/payment/session:
    post:
      description: create session cookie
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/noContent'
  /store/payment/procedure:
    post:
      description: create session cookie
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
        - description: session cookie
          in: header
          name: Set-Cookie
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/noContent'
  /publisher/game:
    post:
      description: post game
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "201":
          $ref: '#/responses/game'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
  /publisher/key:
    post:
      description: post key
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "201":
          $ref: '#/responses/key'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
    delete:
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "200":
          $ref: '#/responses/noContent'
        "422":
          $ref: '#/responses/error'
        "400":
          $ref: '#/responses/error'
  /private/whoami:
    get:
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "201":
          $ref: '#/responses/whoami'
  /private/roles:
    get:
      parameters:
        - description: jwt token
          in: header
          name: Token
          required: true
          type: string
      responses:
        "201":
          $ref: '#/responses/getRole'
produces:
  - application/json
responses:
  whoami:
    description: returns user info
    schema:
      properties:
        id:
          description: user id
          type: string
        email:
          description: user email
          type: string
  getRole:
    description: return all user roles if any
    schema:
      properties:
        id:
          description: user id
          type: string
        role:
          description: user role
          type: string
  game:
    description: return game info
    schema:
      properties:
        id:
          description: game id
          type: string
        name:
          description: game name
          type: string
        price:
          description: game price
          type: string
        user:
          description: seller id
          type: string
  key:
    description: return key info
    schema:
      properties:
        id:
          description: game id, which code belongs to
          type: string
        code:
          description: code itself
          type: string
  noContent:
    description: Response with empty body
  error:
    description: return error and message
    schema:
      properties:
        title:
          description: error
          type: string
        message:
          description: error message
          type: string
schemes:
  - http
swagger: "2.0"